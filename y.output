Rules never reduced

   29 @9: /* empty */

   81 @41: /* empty */

   91 @48: /* empty */


State 1 conflicts: 1 reduce/reduce
State 2 conflicts: 1 reduce/reduce
State 16 conflicts: 1 reduce/reduce
State 76 conflicts: 1 reduce/reduce
State 214 conflicts: 1 reduce/reduce


Grammar

    0 $accept: stmt_list $end

    1 stmt_list: stmt stmt_list

    2 @1: /* empty */

    3 @2: /* empty */

    4 stmt_list: LBRACE @1 stmt_list RBRACE @2 stmt_list
    5          | /* empty */

    6 stmt: if_stmt
    7     | while_stmt
    8     | repeat_stmt
    9     | for_stmt
   10     | switch_stmt
   11     | func_decl
   12     | var_decl
   13     | const_decl
   14     | assignment_stmt
   15     | expr SEMICOLON
   16     | return_stmt SEMICOLON
   17     | BREAK SEMICOLON
   18     | CONTINUE SEMICOLON

   19 @3: /* empty */

   20 return_stmt: RETURN @3

   21 @4: /* empty */

   22 return_stmt: RETURN @4 TERM

   23 @5: /* empty */

   24 return_stmt: RETURN @5 expr

   25 @6: /* empty */

   26 @7: /* empty */

   27 @8: /* empty */

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE @7 stmt_list RBRACE @8

   29 @9: /* empty */

   30 @10: /* empty */

   31 @11: /* empty */

   32 @12: /* empty */

   33 @13: /* empty */

   34 @14: /* empty */

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

   36 @15: /* empty */

   37 @16: /* empty */

   38 while_stmt: WHILE @15 LPAREN expr RPAREN LBRACE @16 stmt_list RBRACE

   39 @17: /* empty */

   40 @18: /* empty */

   41 @19: /* empty */

   42 @20: /* empty */

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

   44 @21: /* empty */

   45 @22: /* empty */

   46 @23: /* empty */

   47 @24: /* empty */

   48 @25: /* empty */

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

   50 @26: /* empty */

   51 @27: /* empty */

   52 @28: /* empty */

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE @27 case_list RBRACE @28

   54 @29: /* empty */

   55 case_list: CASE @29 expr COLON stmt_list case_list

   56 @30: /* empty */

   57 case_list: CASE @30 TERM COLON stmt_list case_list

   58 @31: /* empty */

   59 case_list: DEFAULT @31 COLON stmt_list

   60 @32: /* empty */

   61 @33: /* empty */

   62 @34: /* empty */

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34

   64 @35: /* empty */

   65 func_call: IDENTIFIER @35 LPAREN call_param_list RPAREN
   66          | /* empty */

   67 @36: /* empty */

   68 dec_param_list: DATATYPE IDENTIFIER @36 COMMA dec_param_list

   69 @37: /* empty */

   70 dec_param_list: DATATYPE IDENTIFIER @37
   71               | /* empty */

   72 call_param_list: expr COMMA call_param_list
   73                | expr
   74                | TERM COMMA call_param_list
   75                | TERM

   76 @38: /* empty */

   77 var_decl: DATATYPE IDENTIFIER @38 SEMICOLON

   78 @39: /* empty */

   79 @40: /* empty */

   80 var_decl: DATATYPE IDENTIFIER @39 ASSIGN @40 TERM SEMICOLON

   81 @41: /* empty */

   82 @42: /* empty */

   83 var_decl: DATATYPE IDENTIFIER @41 ASSIGN @42 expr SEMICOLON

   84 @43: /* empty */

   85 @44: /* empty */

   86 @45: /* empty */

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 ASSIGN @45 TERM SEMICOLON

   88 @46: /* empty */

   89 @47: /* empty */

   90 assignment_stmt: IDENTIFIER @46 ASSIGN @47 TERM SEMICOLON

   91 @48: /* empty */

   92 @49: /* empty */

   93 assignment_stmt: IDENTIFIER @48 ASSIGN @49 expr SEMICOLON

   94 @50: /* empty */

   95 @51: /* empty */

   96 expr: expr EQ @50 IDENTIFIER @51

   97 @52: /* empty */

   98 @53: /* empty */

   99 expr: expr NEQ @52 IDENTIFIER @53

  100 @54: /* empty */

  101 @55: /* empty */

  102 expr: expr LT @54 IDENTIFIER @55

  103 @56: /* empty */

  104 @57: /* empty */

  105 expr: expr GT @56 IDENTIFIER @57

  106 @58: /* empty */

  107 @59: /* empty */

  108 expr: expr LEQ @58 IDENTIFIER @59

  109 @60: /* empty */

  110 @61: /* empty */

  111 expr: expr GEQ @60 IDENTIFIER @61

  112 @62: /* empty */

  113 @63: /* empty */

  114 expr: expr DIVIDE @62 IDENTIFIER @63

  115 @64: /* empty */

  116 @65: /* empty */

  117 expr: expr TIMES @64 IDENTIFIER @65

  118 @66: /* empty */

  119 @67: /* empty */

  120 expr: expr MINUS @66 IDENTIFIER @67

  121 @68: /* empty */

  122 @69: /* empty */

  123 expr: expr PLUS @68 IDENTIFIER @69

  124 @70: /* empty */

  125 @71: /* empty */

  126 expr: UNARY @70 IDENTIFIER @71

  127 @72: /* empty */

  128 @73: /* empty */

  129 expr: IDENTIFIER @72 UNARY @73

  130 @74: /* empty */

  131 expr: expr PLUS @74 TERM

  132 @75: /* empty */

  133 expr: expr MINUS @75 TERM

  134 @76: /* empty */

  135 expr: expr TIMES @76 TERM

  136 @77: /* empty */

  137 expr: expr DIVIDE @77 TERM

  138 @78: /* empty */

  139 expr: expr EQ @78 TERM

  140 @79: /* empty */

  141 expr: expr NEQ @79 TERM

  142 @80: /* empty */

  143 expr: expr LT @80 TERM

  144 @81: /* empty */

  145 expr: expr GT @81 TERM

  146 @82: /* empty */

  147 expr: expr LEQ @82 TERM

  148 @83: /* empty */

  149 expr: expr GEQ @83 TERM

  150 @84: /* empty */

  151 expr: expr POWER @84 TERM

  152 @85: /* empty */

  153 expr: expr AND @85 TERM

  154 @86: /* empty */

  155 expr: expr OR @86 TERM

  156 @87: /* empty */

  157 expr: NOT @87 TERM
  158     | LPAREN expr RPAREN

  159 @88: /* empty */

  160 expr: expr PLUS @88 LPAREN expr RPAREN

  161 @89: /* empty */

  162 expr: expr MINUS @89 LPAREN expr RPAREN

  163 @90: /* empty */

  164 expr: expr TIMES @90 LPAREN expr RPAREN

  165 @91: /* empty */

  166 expr: expr DIVIDE @91 LPAREN expr RPAREN

  167 @92: /* empty */

  168 expr: expr EQ @92 LPAREN expr RPAREN

  169 @93: /* empty */

  170 expr: expr NEQ @93 LPAREN expr RPAREN

  171 @94: /* empty */

  172 expr: expr LT @94 LPAREN expr RPAREN

  173 @95: /* empty */

  174 expr: expr GT @95 LPAREN expr RPAREN

  175 @96: /* empty */

  176 expr: expr LEQ @96 LPAREN expr RPAREN

  177 @97: /* empty */

  178 expr: expr GEQ @97 LPAREN expr RPAREN

  179 @98: /* empty */

  180 expr: expr POWER @98 LPAREN expr RPAREN

  181 @99: /* empty */

  182 expr: expr AND @99 LPAREN expr RPAREN

  183 @100: /* empty */

  184 expr: expr OR @100 LPAREN expr RPAREN
  185     | NOT LPAREN expr RPAREN

  186 @101: /* empty */

  187 expr: IDENTIFIER @101
  188     | func_call

  189 @102: /* empty */

  190 TERM: NUMBER @102

  191 @103: /* empty */

  192 TERM: TRUE @103

  193 @104: /* empty */

  194 TERM: FALSE @104

  195 @105: /* empty */

  196 TERM: CHARACTER_LITERAL @105

  197 @106: /* empty */

  198 TERM: STRING_LITERAL @106

  199 @107: /* empty */

  200 TERM: FLOATING_NUMBER @107

  201 DATATYPE: INT
  202         | BOOL
  203         | CHAR
  204         | STRING
  205         | FLOAT
  206         | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 190
FLOATING_NUMBER (259) 200
STRING_LITERAL (260) 198
IDENTIFIER (261) 49 63 65 68 70 77 80 83 87 90 93 96 99 102 105 108
    111 114 117 120 123 126 129 187
CHARACTER_LITERAL (262) 196
TRUE (263) 192
FALSE (264) 194
COMMA (265) 68 72 74
IF (266) 28 35
ELSE (267) 35
WHILE (268) 38
REPEAT (269) 43
UNTIL (270) 43
FOR (271) 49
SWITCH (272) 53
CASE (273) 55 57
BREAK (274) 17
CONTINUE (275) 18
CONST (276) 87
INT (277) 201
FLOAT (278) 205
BOOL (279) 202
STRING (280) 204
CHAR (281) 203
VOID (282) 206
RETURN (283) 20 22 24
DEFAULT (284) 59
EQ (285) 96 139 168
NEQ (286) 99 141 170
LT (287) 102 143 172
GT (288) 105 145 174
LEQ (289) 108 147 176
GEQ (290) 111 149 178
PLUS (291) 123 131 160
MINUS (292) 120 133 162
TIMES (293) 117 135 164
DIVIDE (294) 114 137 166
ASSIGN (295) 49 80 83 87 90 93
LPAREN (296) 28 35 38 43 49 53 63 65 158 160 162 164 166 168 170 172
    174 176 178 180 182 184 185
RPAREN (297) 28 35 38 43 49 53 63 65 158 160 162 164 166 168 170 172
    174 176 178 180 182 184 185
LBRACE (298) 4 28 35 38 43 49 53 63
RBRACE (299) 4 28 35 38 43 49 53 63
SEMICOLON (300) 15 16 17 18 43 49 77 80 83 87 90 93
COLON (301) 55 57 59
POWER (302) 151 180
UNARY (303) 126 129
AND (304) 153 182
OR (305) 155 184
NOT (306) 157 185
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
stmt_list (54)
    on left: 1 4 5, on right: 0 1 4 28 35 38 43 49 55 57 59 63
@1 (55)
    on left: 2, on right: 4
@2 (56)
    on left: 3, on right: 4
stmt (57)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 1
return_stmt (58)
    on left: 20 22 24, on right: 16
@3 (59)
    on left: 19, on right: 20
@4 (60)
    on left: 21, on right: 22
@5 (61)
    on left: 23, on right: 24
if_stmt (62)
    on left: 28 35, on right: 6
@6 (63)
    on left: 25, on right: 28
@7 (64)
    on left: 26, on right: 28
@8 (65)
    on left: 27, on right: 28
@9 (66)
    on left: 29, on right: 35
@10 (67)
    on left: 30, on right: 35
@11 (68)
    on left: 31, on right: 35
@12 (69)
    on left: 32, on right: 35
@13 (70)
    on left: 33, on right: 35
@14 (71)
    on left: 34, on right: 35
while_stmt (72)
    on left: 38, on right: 7
@15 (73)
    on left: 36, on right: 38
@16 (74)
    on left: 37, on right: 38
repeat_stmt (75)
    on left: 43, on right: 8
@17 (76)
    on left: 39, on right: 43
@18 (77)
    on left: 40, on right: 43
@19 (78)
    on left: 41, on right: 43
@20 (79)
    on left: 42, on right: 43
for_stmt (80)
    on left: 49, on right: 9
@21 (81)
    on left: 44, on right: 49
@22 (82)
    on left: 45, on right: 49
@23 (83)
    on left: 46, on right: 49
@24 (84)
    on left: 47, on right: 49
@25 (85)
    on left: 48, on right: 49
switch_stmt (86)
    on left: 53, on right: 10
@26 (87)
    on left: 50, on right: 53
@27 (88)
    on left: 51, on right: 53
@28 (89)
    on left: 52, on right: 53
case_list (90)
    on left: 55 57 59, on right: 53 55 57
@29 (91)
    on left: 54, on right: 55
@30 (92)
    on left: 56, on right: 57
@31 (93)
    on left: 58, on right: 59
func_decl (94)
    on left: 63, on right: 11
@32 (95)
    on left: 60, on right: 63
@33 (96)
    on left: 61, on right: 63
@34 (97)
    on left: 62, on right: 63
func_call (98)
    on left: 65 66, on right: 188
@35 (99)
    on left: 64, on right: 65
dec_param_list (100)
    on left: 68 70 71, on right: 63 68
@36 (101)
    on left: 67, on right: 68
@37 (102)
    on left: 69, on right: 70
call_param_list (103)
    on left: 72 73 74 75, on right: 65 72 74
var_decl (104)
    on left: 77 80 83, on right: 12 49
@38 (105)
    on left: 76, on right: 77
@39 (106)
    on left: 78, on right: 80
@40 (107)
    on left: 79, on right: 80
@41 (108)
    on left: 81, on right: 83
@42 (109)
    on left: 82, on right: 83
const_decl (110)
    on left: 87, on right: 13
@43 (111)
    on left: 84, on right: 87
@44 (112)
    on left: 85, on right: 87
@45 (113)
    on left: 86, on right: 87
assignment_stmt (114)
    on left: 90 93, on right: 14
@46 (115)
    on left: 88, on right: 90
@47 (116)
    on left: 89, on right: 90
@48 (117)
    on left: 91, on right: 93
@49 (118)
    on left: 92, on right: 93
expr (119)
    on left: 96 99 102 105 108 111 114 117 120 123 126 129 131 133
    135 137 139 141 143 145 147 149 151 153 155 157 158 160 162 164
    166 168 170 172 174 176 178 180 182 184 185 187 188,
    on right: 15 24 28 35 38 43 49 53 55 72 73 83 93 96 99 102 105
    108 111 114 117 120 123 131 133 135 137 139 141 143 145 147 149
    151 153 155 158 160 162 164 166 168 170 172 174 176 178 180 182
    184 185
@50 (120)
    on left: 94, on right: 96
@51 (121)
    on left: 95, on right: 96
@52 (122)
    on left: 97, on right: 99
@53 (123)
    on left: 98, on right: 99
@54 (124)
    on left: 100, on right: 102
@55 (125)
    on left: 101, on right: 102
@56 (126)
    on left: 103, on right: 105
@57 (127)
    on left: 104, on right: 105
@58 (128)
    on left: 106, on right: 108
@59 (129)
    on left: 107, on right: 108
@60 (130)
    on left: 109, on right: 111
@61 (131)
    on left: 110, on right: 111
@62 (132)
    on left: 112, on right: 114
@63 (133)
    on left: 113, on right: 114
@64 (134)
    on left: 115, on right: 117
@65 (135)
    on left: 116, on right: 117
@66 (136)
    on left: 118, on right: 120
@67 (137)
    on left: 119, on right: 120
@68 (138)
    on left: 121, on right: 123
@69 (139)
    on left: 122, on right: 123
@70 (140)
    on left: 124, on right: 126
@71 (141)
    on left: 125, on right: 126
@72 (142)
    on left: 127, on right: 129
@73 (143)
    on left: 128, on right: 129
@74 (144)
    on left: 130, on right: 131
@75 (145)
    on left: 132, on right: 133
@76 (146)
    on left: 134, on right: 135
@77 (147)
    on left: 136, on right: 137
@78 (148)
    on left: 138, on right: 139
@79 (149)
    on left: 140, on right: 141
@80 (150)
    on left: 142, on right: 143
@81 (151)
    on left: 144, on right: 145
@82 (152)
    on left: 146, on right: 147
@83 (153)
    on left: 148, on right: 149
@84 (154)
    on left: 150, on right: 151
@85 (155)
    on left: 152, on right: 153
@86 (156)
    on left: 154, on right: 155
@87 (157)
    on left: 156, on right: 157
@88 (158)
    on left: 159, on right: 160
@89 (159)
    on left: 161, on right: 162
@90 (160)
    on left: 163, on right: 164
@91 (161)
    on left: 165, on right: 166
@92 (162)
    on left: 167, on right: 168
@93 (163)
    on left: 169, on right: 170
@94 (164)
    on left: 171, on right: 172
@95 (165)
    on left: 173, on right: 174
@96 (166)
    on left: 175, on right: 176
@97 (167)
    on left: 177, on right: 178
@98 (168)
    on left: 179, on right: 180
@99 (169)
    on left: 181, on right: 182
@100 (170)
    on left: 183, on right: 184
@101 (171)
    on left: 186, on right: 187
TERM (172)
    on left: 190 192 194 196 198 200, on right: 22 57 74 75 80 87 90
    131 133 135 137 139 141 143 145 147 149 151 153 155 157
@102 (173)
    on left: 189, on right: 190
@103 (174)
    on left: 191, on right: 192
@104 (175)
    on left: 193, on right: 194
@105 (176)
    on left: 195, on right: 196
@106 (177)
    on left: 197, on right: 198
@107 (178)
    on left: 199, on right: 200
DATATYPE (179)
    on left: 201 202 203 204 205 206, on right: 63 68 70 77 80 83 87


state 0

    0 $accept: . stmt_list $end

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $end      reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 21
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 1

   65 func_call: IDENTIFIER . @35 LPAREN call_param_list RPAREN
   90 assignment_stmt: IDENTIFIER . @46 ASSIGN @47 TERM SEMICOLON
   93                | IDENTIFIER . @48 ASSIGN @49 expr SEMICOLON
  129 expr: IDENTIFIER . @72 UNARY @73
  187     | IDENTIFIER . @101

    ASSIGN    reduce using rule 88 (@46)
    ASSIGN    [reduce using rule 91 (@48)]
    LPAREN    reduce using rule 64 (@35)
    UNARY     reduce using rule 127 (@72)
    $default  reduce using rule 186 (@101)

    @35   go to state 36
    @46   go to state 37
    @48   go to state 38
    @72   go to state 39
    @101  go to state 40


state 2

   28 if_stmt: IF . @6 LPAREN expr RPAREN LBRACE @7 stmt_list RBRACE @8
   35        | IF . @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    LPAREN    reduce using rule 25 (@6)
    LPAREN    [reduce using rule 29 (@9)]
    $default  reduce using rule 25 (@6)

    @6  go to state 41
    @9  go to state 42


state 3

   38 while_stmt: WHILE . @15 LPAREN expr RPAREN LBRACE @16 stmt_list RBRACE

    $default  reduce using rule 36 (@15)

    @15  go to state 43


state 4

   43 repeat_stmt: REPEAT . @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    $default  reduce using rule 39 (@17)

    @17  go to state 44


state 5

   49 for_stmt: FOR . @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    $default  reduce using rule 44 (@21)

    @21  go to state 45


state 6

   53 switch_stmt: SWITCH . @26 LPAREN expr RPAREN LBRACE @27 case_list RBRACE @28

    $default  reduce using rule 50 (@26)

    @26  go to state 46


state 7

   17 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 8

   18 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 48


state 9

   87 const_decl: CONST . @43 DATATYPE IDENTIFIER @44 ASSIGN @45 TERM SEMICOLON

    $default  reduce using rule 84 (@43)

    @43  go to state 49


state 10

  201 DATATYPE: INT .

    $default  reduce using rule 201 (DATATYPE)


state 11

  205 DATATYPE: FLOAT .

    $default  reduce using rule 205 (DATATYPE)


state 12

  202 DATATYPE: BOOL .

    $default  reduce using rule 202 (DATATYPE)


state 13

  204 DATATYPE: STRING .

    $default  reduce using rule 204 (DATATYPE)


state 14

  203 DATATYPE: CHAR .

    $default  reduce using rule 203 (DATATYPE)


state 15

  206 DATATYPE: VOID .

    $default  reduce using rule 206 (DATATYPE)


state 16

   20 return_stmt: RETURN . @3
   22            | RETURN . @4 TERM
   24            | RETURN . @5 expr

    NUMBER             reduce using rule 21 (@4)
    FLOATING_NUMBER    reduce using rule 21 (@4)
    STRING_LITERAL     reduce using rule 21 (@4)
    CHARACTER_LITERAL  reduce using rule 21 (@4)
    TRUE               reduce using rule 21 (@4)
    FALSE              reduce using rule 21 (@4)
    SEMICOLON          reduce using rule 19 (@3)
    SEMICOLON          [reduce using rule 23 (@5)]
    $default           reduce using rule 23 (@5)

    @3  go to state 50
    @4  go to state 51
    @5  go to state 52


state 17

  158 expr: LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 54


state 18

    4 stmt_list: LBRACE . @1 stmt_list RBRACE @2 stmt_list

    $default  reduce using rule 2 (@1)

    @1  go to state 55


state 19

  126 expr: UNARY . @70 IDENTIFIER @71

    $default  reduce using rule 124 (@70)

    @70  go to state 56


state 20

  157 expr: NOT . @87 TERM
  185     | NOT . LPAREN expr RPAREN

    LPAREN  shift, and go to state 57

    $default  reduce using rule 156 (@87)

    @87  go to state 58


state 21

    0 $accept: stmt_list . $end

    $end  shift, and go to state 59


state 22

    1 stmt_list: stmt . stmt_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $end      reduce using rule 5 (stmt_list)
    CASE      reduce using rule 5 (stmt_list)
    DEFAULT   reduce using rule 5 (stmt_list)
    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 60
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 23

   16 stmt: return_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 61


state 24

    6 stmt: if_stmt .

    $default  reduce using rule 6 (stmt)


state 25

    7 stmt: while_stmt .

    $default  reduce using rule 7 (stmt)


state 26

    8 stmt: repeat_stmt .

    $default  reduce using rule 8 (stmt)


state 27

    9 stmt: for_stmt .

    $default  reduce using rule 9 (stmt)


state 28

   10 stmt: switch_stmt .

    $default  reduce using rule 10 (stmt)


state 29

   11 stmt: func_decl .

    $default  reduce using rule 11 (stmt)


state 30

  188 expr: func_call .

    $default  reduce using rule 188 (expr)


state 31

   12 stmt: var_decl .

    $default  reduce using rule 12 (stmt)


state 32

   13 stmt: const_decl .

    $default  reduce using rule 13 (stmt)


state 33

   14 stmt: assignment_stmt .

    $default  reduce using rule 14 (stmt)


state 34

   15 stmt: expr . SEMICOLON
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ         shift, and go to state 62
    NEQ        shift, and go to state 63
    LT         shift, and go to state 64
    GT         shift, and go to state 65
    LEQ        shift, and go to state 66
    GEQ        shift, and go to state 67
    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    TIMES      shift, and go to state 70
    DIVIDE     shift, and go to state 71
    SEMICOLON  shift, and go to state 72
    POWER      shift, and go to state 73
    AND        shift, and go to state 74
    OR         shift, and go to state 75


state 35

   63 func_decl: DATATYPE . IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34
   77 var_decl: DATATYPE . IDENTIFIER @38 SEMICOLON
   80         | DATATYPE . IDENTIFIER @39 ASSIGN @40 TERM SEMICOLON
   83         | DATATYPE . IDENTIFIER @41 ASSIGN @42 expr SEMICOLON

    IDENTIFIER  shift, and go to state 76


state 36

   65 func_call: IDENTIFIER @35 . LPAREN call_param_list RPAREN

    LPAREN  shift, and go to state 77


state 37

   90 assignment_stmt: IDENTIFIER @46 . ASSIGN @47 TERM SEMICOLON

    ASSIGN  shift, and go to state 78


state 38

   93 assignment_stmt: IDENTIFIER @48 . ASSIGN @49 expr SEMICOLON

    ASSIGN  shift, and go to state 79


state 39

  129 expr: IDENTIFIER @72 . UNARY @73

    UNARY  shift, and go to state 80


state 40

  187 expr: IDENTIFIER @101 .

    $default  reduce using rule 187 (expr)


state 41

   28 if_stmt: IF @6 . LPAREN expr RPAREN LBRACE @7 stmt_list RBRACE @8

    LPAREN  shift, and go to state 81


state 42

   35 if_stmt: IF @9 . LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    LPAREN  shift, and go to state 82


state 43

   38 while_stmt: WHILE @15 . LPAREN expr RPAREN LBRACE @16 stmt_list RBRACE

    LPAREN  shift, and go to state 83


state 44

   43 repeat_stmt: REPEAT @17 . LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    LBRACE  shift, and go to state 84


state 45

   49 for_stmt: FOR @21 . LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    LPAREN  shift, and go to state 85


state 46

   53 switch_stmt: SWITCH @26 . LPAREN expr RPAREN LBRACE @27 case_list RBRACE @28

    LPAREN  shift, and go to state 86


state 47

   17 stmt: BREAK SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 48

   18 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 49

   87 const_decl: CONST @43 . DATATYPE IDENTIFIER @44 ASSIGN @45 TERM SEMICOLON

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13
    CHAR    shift, and go to state 14
    VOID    shift, and go to state 15

    DATATYPE  go to state 87


state 50

   20 return_stmt: RETURN @3 .

    $default  reduce using rule 20 (return_stmt)


state 51

   22 return_stmt: RETURN @4 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 94


state 52

   24 return_stmt: RETURN @5 . expr

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 95


state 53

   65 func_call: IDENTIFIER . @35 LPAREN call_param_list RPAREN
  129 expr: IDENTIFIER . @72 UNARY @73
  187     | IDENTIFIER . @101

    LPAREN    reduce using rule 64 (@35)
    UNARY     reduce using rule 127 (@72)
    $default  reduce using rule 186 (@101)

    @35   go to state 36
    @72   go to state 39
    @101  go to state 40


state 54

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  158     | LPAREN expr . RPAREN
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 96
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 55

    4 stmt_list: LBRACE @1 . stmt_list RBRACE @2 stmt_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 97
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 56

  126 expr: UNARY @70 . IDENTIFIER @71

    IDENTIFIER  shift, and go to state 98


state 57

  185 expr: NOT LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 99


state 58

  157 expr: NOT @87 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 100


state 59

    0 $accept: stmt_list $end .

    $default  accept


state 60

    1 stmt_list: stmt stmt_list .

    $default  reduce using rule 1 (stmt_list)


state 61

   16 stmt: return_stmt SEMICOLON .

    $default  reduce using rule 16 (stmt)


state 62

   96 expr: expr EQ . @50 IDENTIFIER @51
  139     | expr EQ . @78 TERM
  168     | expr EQ . @92 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 94 (@50)
    LPAREN      reduce using rule 167 (@92)
    $default    reduce using rule 138 (@78)

    @50  go to state 101
    @78  go to state 102
    @92  go to state 103


state 63

   99 expr: expr NEQ . @52 IDENTIFIER @53
  141     | expr NEQ . @79 TERM
  170     | expr NEQ . @93 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 97 (@52)
    LPAREN      reduce using rule 169 (@93)
    $default    reduce using rule 140 (@79)

    @52  go to state 104
    @79  go to state 105
    @93  go to state 106


state 64

  102 expr: expr LT . @54 IDENTIFIER @55
  143     | expr LT . @80 TERM
  172     | expr LT . @94 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 100 (@54)
    LPAREN      reduce using rule 171 (@94)
    $default    reduce using rule 142 (@80)

    @54  go to state 107
    @80  go to state 108
    @94  go to state 109


state 65

  105 expr: expr GT . @56 IDENTIFIER @57
  145     | expr GT . @81 TERM
  174     | expr GT . @95 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 103 (@56)
    LPAREN      reduce using rule 173 (@95)
    $default    reduce using rule 144 (@81)

    @56  go to state 110
    @81  go to state 111
    @95  go to state 112


state 66

  108 expr: expr LEQ . @58 IDENTIFIER @59
  147     | expr LEQ . @82 TERM
  176     | expr LEQ . @96 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 106 (@58)
    LPAREN      reduce using rule 175 (@96)
    $default    reduce using rule 146 (@82)

    @58  go to state 113
    @82  go to state 114
    @96  go to state 115


state 67

  111 expr: expr GEQ . @60 IDENTIFIER @61
  149     | expr GEQ . @83 TERM
  178     | expr GEQ . @97 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 109 (@60)
    LPAREN      reduce using rule 177 (@97)
    $default    reduce using rule 148 (@83)

    @60  go to state 116
    @83  go to state 117
    @97  go to state 118


state 68

  123 expr: expr PLUS . @68 IDENTIFIER @69
  131     | expr PLUS . @74 TERM
  160     | expr PLUS . @88 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 121 (@68)
    LPAREN      reduce using rule 159 (@88)
    $default    reduce using rule 130 (@74)

    @68  go to state 119
    @74  go to state 120
    @88  go to state 121


state 69

  120 expr: expr MINUS . @66 IDENTIFIER @67
  133     | expr MINUS . @75 TERM
  162     | expr MINUS . @89 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 118 (@66)
    LPAREN      reduce using rule 161 (@89)
    $default    reduce using rule 132 (@75)

    @66  go to state 122
    @75  go to state 123
    @89  go to state 124


state 70

  117 expr: expr TIMES . @64 IDENTIFIER @65
  135     | expr TIMES . @76 TERM
  164     | expr TIMES . @90 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 115 (@64)
    LPAREN      reduce using rule 163 (@90)
    $default    reduce using rule 134 (@76)

    @64  go to state 125
    @76  go to state 126
    @90  go to state 127


state 71

  114 expr: expr DIVIDE . @62 IDENTIFIER @63
  137     | expr DIVIDE . @77 TERM
  166     | expr DIVIDE . @91 LPAREN expr RPAREN

    IDENTIFIER  reduce using rule 112 (@62)
    LPAREN      reduce using rule 165 (@91)
    $default    reduce using rule 136 (@77)

    @62  go to state 128
    @77  go to state 129
    @91  go to state 130


state 72

   15 stmt: expr SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 73

  151 expr: expr POWER . @84 TERM
  180     | expr POWER . @98 LPAREN expr RPAREN

    LPAREN    reduce using rule 179 (@98)
    $default  reduce using rule 150 (@84)

    @84  go to state 131
    @98  go to state 132


state 74

  153 expr: expr AND . @85 TERM
  182     | expr AND . @99 LPAREN expr RPAREN

    LPAREN    reduce using rule 181 (@99)
    $default  reduce using rule 152 (@85)

    @85  go to state 133
    @99  go to state 134


state 75

  155 expr: expr OR . @86 TERM
  184     | expr OR . @100 LPAREN expr RPAREN

    LPAREN    reduce using rule 183 (@100)
    $default  reduce using rule 154 (@86)

    @86   go to state 135
    @100  go to state 136


state 76

   63 func_decl: DATATYPE IDENTIFIER . @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34
   77 var_decl: DATATYPE IDENTIFIER . @38 SEMICOLON
   80         | DATATYPE IDENTIFIER . @39 ASSIGN @40 TERM SEMICOLON
   83         | DATATYPE IDENTIFIER . @41 ASSIGN @42 expr SEMICOLON

    ASSIGN     reduce using rule 78 (@39)
    ASSIGN     [reduce using rule 81 (@41)]
    SEMICOLON  reduce using rule 76 (@38)
    $default   reduce using rule 60 (@32)

    @32  go to state 137
    @38  go to state 138
    @39  go to state 139
    @41  go to state 140


state 77

   65 func_call: IDENTIFIER @35 LPAREN . call_param_list RPAREN

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    IDENTIFIER         shift, and go to state 53
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93
    LPAREN             shift, and go to state 17
    UNARY              shift, and go to state 19
    NOT                shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call        go to state 30
    call_param_list  go to state 141
    expr             go to state 142
    TERM             go to state 143


state 78

   90 assignment_stmt: IDENTIFIER @46 ASSIGN . @47 TERM SEMICOLON

    $default  reduce using rule 89 (@47)

    @47  go to state 144


state 79

   93 assignment_stmt: IDENTIFIER @48 ASSIGN . @49 expr SEMICOLON

    $default  reduce using rule 92 (@49)

    @49  go to state 145


state 80

  129 expr: IDENTIFIER @72 UNARY . @73

    $default  reduce using rule 128 (@73)

    @73  go to state 146


state 81

   28 if_stmt: IF @6 LPAREN . expr RPAREN LBRACE @7 stmt_list RBRACE @8

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 147


state 82

   35 if_stmt: IF @9 LPAREN . expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 148


state 83

   38 while_stmt: WHILE @15 LPAREN . expr RPAREN LBRACE @16 stmt_list RBRACE

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 149


state 84

   43 repeat_stmt: REPEAT @17 LBRACE . @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    $default  reduce using rule 40 (@18)

    @18  go to state 150


state 85

   49 for_stmt: FOR @21 LPAREN . var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13
    CHAR    shift, and go to state 14
    VOID    shift, and go to state 15

    var_decl  go to state 151
    DATATYPE  go to state 152


state 86

   53 switch_stmt: SWITCH @26 LPAREN . expr RPAREN LBRACE @27 case_list RBRACE @28

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 153


state 87

   87 const_decl: CONST @43 DATATYPE . IDENTIFIER @44 ASSIGN @45 TERM SEMICOLON

    IDENTIFIER  shift, and go to state 154


state 88

  190 TERM: NUMBER . @102

    $default  reduce using rule 189 (@102)

    @102  go to state 155


state 89

  200 TERM: FLOATING_NUMBER . @107

    $default  reduce using rule 199 (@107)

    @107  go to state 156


state 90

  198 TERM: STRING_LITERAL . @106

    $default  reduce using rule 197 (@106)

    @106  go to state 157


state 91

  196 TERM: CHARACTER_LITERAL . @105

    $default  reduce using rule 195 (@105)

    @105  go to state 158


state 92

  192 TERM: TRUE . @103

    $default  reduce using rule 191 (@103)

    @103  go to state 159


state 93

  194 TERM: FALSE . @104

    $default  reduce using rule 193 (@104)

    @104  go to state 160


state 94

   22 return_stmt: RETURN @4 TERM .

    $default  reduce using rule 22 (return_stmt)


state 95

   24 return_stmt: RETURN @5 expr .
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75

    $default  reduce using rule 24 (return_stmt)


state 96

  158 expr: LPAREN expr RPAREN .

    $default  reduce using rule 158 (expr)


state 97

    4 stmt_list: LBRACE @1 stmt_list . RBRACE @2 stmt_list

    RBRACE  shift, and go to state 161


state 98

  126 expr: UNARY @70 IDENTIFIER . @71

    $default  reduce using rule 125 (@71)

    @71  go to state 162


state 99

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN
  185     | NOT LPAREN expr . RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 163
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 100

  157 expr: NOT @87 TERM .

    $default  reduce using rule 157 (expr)


state 101

   96 expr: expr EQ @50 . IDENTIFIER @51

    IDENTIFIER  shift, and go to state 164


state 102

  139 expr: expr EQ @78 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 165


state 103

  168 expr: expr EQ @92 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 166


state 104

   99 expr: expr NEQ @52 . IDENTIFIER @53

    IDENTIFIER  shift, and go to state 167


state 105

  141 expr: expr NEQ @79 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 168


state 106

  170 expr: expr NEQ @93 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 169


state 107

  102 expr: expr LT @54 . IDENTIFIER @55

    IDENTIFIER  shift, and go to state 170


state 108

  143 expr: expr LT @80 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 171


state 109

  172 expr: expr LT @94 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 172


state 110

  105 expr: expr GT @56 . IDENTIFIER @57

    IDENTIFIER  shift, and go to state 173


state 111

  145 expr: expr GT @81 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 174


state 112

  174 expr: expr GT @95 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 175


state 113

  108 expr: expr LEQ @58 . IDENTIFIER @59

    IDENTIFIER  shift, and go to state 176


state 114

  147 expr: expr LEQ @82 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 177


state 115

  176 expr: expr LEQ @96 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 178


state 116

  111 expr: expr GEQ @60 . IDENTIFIER @61

    IDENTIFIER  shift, and go to state 179


state 117

  149 expr: expr GEQ @83 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 180


state 118

  178 expr: expr GEQ @97 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 181


state 119

  123 expr: expr PLUS @68 . IDENTIFIER @69

    IDENTIFIER  shift, and go to state 182


state 120

  131 expr: expr PLUS @74 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 183


state 121

  160 expr: expr PLUS @88 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 184


state 122

  120 expr: expr MINUS @66 . IDENTIFIER @67

    IDENTIFIER  shift, and go to state 185


state 123

  133 expr: expr MINUS @75 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 186


state 124

  162 expr: expr MINUS @89 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 187


state 125

  117 expr: expr TIMES @64 . IDENTIFIER @65

    IDENTIFIER  shift, and go to state 188


state 126

  135 expr: expr TIMES @76 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 189


state 127

  164 expr: expr TIMES @90 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 190


state 128

  114 expr: expr DIVIDE @62 . IDENTIFIER @63

    IDENTIFIER  shift, and go to state 191


state 129

  137 expr: expr DIVIDE @77 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 192


state 130

  166 expr: expr DIVIDE @91 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 193


state 131

  151 expr: expr POWER @84 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 194


state 132

  180 expr: expr POWER @98 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 195


state 133

  153 expr: expr AND @85 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 196


state 134

  182 expr: expr AND @99 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 197


state 135

  155 expr: expr OR @86 . TERM

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 198


state 136

  184 expr: expr OR @100 . LPAREN expr RPAREN

    LPAREN  shift, and go to state 199


state 137

   63 func_decl: DATATYPE IDENTIFIER @32 . LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34

    LPAREN  shift, and go to state 200


state 138

   77 var_decl: DATATYPE IDENTIFIER @38 . SEMICOLON

    SEMICOLON  shift, and go to state 201


state 139

   80 var_decl: DATATYPE IDENTIFIER @39 . ASSIGN @40 TERM SEMICOLON

    ASSIGN  shift, and go to state 202


state 140

   83 var_decl: DATATYPE IDENTIFIER @41 . ASSIGN @42 expr SEMICOLON

    ASSIGN  shift, and go to state 203


state 141

   65 func_call: IDENTIFIER @35 LPAREN call_param_list . RPAREN

    RPAREN  shift, and go to state 204


state 142

   72 call_param_list: expr . COMMA call_param_list
   73                | expr .
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    COMMA   shift, and go to state 205
    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75

    $default  reduce using rule 73 (call_param_list)


state 143

   74 call_param_list: TERM . COMMA call_param_list
   75                | TERM .

    COMMA  shift, and go to state 206

    $default  reduce using rule 75 (call_param_list)


state 144

   90 assignment_stmt: IDENTIFIER @46 ASSIGN @47 . TERM SEMICOLON

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 207


state 145

   93 assignment_stmt: IDENTIFIER @48 ASSIGN @49 . expr SEMICOLON

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 208


state 146

  129 expr: IDENTIFIER @72 UNARY @73 .

    $default  reduce using rule 129 (expr)


state 147

   28 if_stmt: IF @6 LPAREN expr . RPAREN LBRACE @7 stmt_list RBRACE @8
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 209
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 148

   35 if_stmt: IF @9 LPAREN expr . RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 210
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 149

   38 while_stmt: WHILE @15 LPAREN expr . RPAREN LBRACE @16 stmt_list RBRACE
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 211
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 150

   43 repeat_stmt: REPEAT @17 LBRACE @18 . stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 212
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 151

   49 for_stmt: FOR @21 LPAREN var_decl . expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 213


state 152

   77 var_decl: DATATYPE . IDENTIFIER @38 SEMICOLON
   80         | DATATYPE . IDENTIFIER @39 ASSIGN @40 TERM SEMICOLON
   83         | DATATYPE . IDENTIFIER @41 ASSIGN @42 expr SEMICOLON

    IDENTIFIER  shift, and go to state 214


state 153

   53 switch_stmt: SWITCH @26 LPAREN expr . RPAREN LBRACE @27 case_list RBRACE @28
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 215
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 154

   87 const_decl: CONST @43 DATATYPE IDENTIFIER . @44 ASSIGN @45 TERM SEMICOLON

    $default  reduce using rule 85 (@44)

    @44  go to state 216


state 155

  190 TERM: NUMBER @102 .

    $default  reduce using rule 190 (TERM)


state 156

  200 TERM: FLOATING_NUMBER @107 .

    $default  reduce using rule 200 (TERM)


state 157

  198 TERM: STRING_LITERAL @106 .

    $default  reduce using rule 198 (TERM)


state 158

  196 TERM: CHARACTER_LITERAL @105 .

    $default  reduce using rule 196 (TERM)


state 159

  192 TERM: TRUE @103 .

    $default  reduce using rule 192 (TERM)


state 160

  194 TERM: FALSE @104 .

    $default  reduce using rule 194 (TERM)


state 161

    4 stmt_list: LBRACE @1 stmt_list RBRACE . @2 stmt_list

    $default  reduce using rule 3 (@2)

    @2  go to state 217


state 162

  126 expr: UNARY @70 IDENTIFIER @71 .

    $default  reduce using rule 126 (expr)


state 163

  185 expr: NOT LPAREN expr RPAREN .

    $default  reduce using rule 185 (expr)


state 164

   96 expr: expr EQ @50 IDENTIFIER . @51

    $default  reduce using rule 95 (@51)

    @51  go to state 218


state 165

  139 expr: expr EQ @78 TERM .

    $default  reduce using rule 139 (expr)


state 166

  168 expr: expr EQ @92 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 219


state 167

   99 expr: expr NEQ @52 IDENTIFIER . @53

    $default  reduce using rule 98 (@53)

    @53  go to state 220


state 168

  141 expr: expr NEQ @79 TERM .

    $default  reduce using rule 141 (expr)


state 169

  170 expr: expr NEQ @93 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 221


state 170

  102 expr: expr LT @54 IDENTIFIER . @55

    $default  reduce using rule 101 (@55)

    @55  go to state 222


state 171

  143 expr: expr LT @80 TERM .

    $default  reduce using rule 143 (expr)


state 172

  172 expr: expr LT @94 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 223


state 173

  105 expr: expr GT @56 IDENTIFIER . @57

    $default  reduce using rule 104 (@57)

    @57  go to state 224


state 174

  145 expr: expr GT @81 TERM .

    $default  reduce using rule 145 (expr)


state 175

  174 expr: expr GT @95 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 225


state 176

  108 expr: expr LEQ @58 IDENTIFIER . @59

    $default  reduce using rule 107 (@59)

    @59  go to state 226


state 177

  147 expr: expr LEQ @82 TERM .

    $default  reduce using rule 147 (expr)


state 178

  176 expr: expr LEQ @96 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 227


state 179

  111 expr: expr GEQ @60 IDENTIFIER . @61

    $default  reduce using rule 110 (@61)

    @61  go to state 228


state 180

  149 expr: expr GEQ @83 TERM .

    $default  reduce using rule 149 (expr)


state 181

  178 expr: expr GEQ @97 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 229


state 182

  123 expr: expr PLUS @68 IDENTIFIER . @69

    $default  reduce using rule 122 (@69)

    @69  go to state 230


state 183

  131 expr: expr PLUS @74 TERM .

    $default  reduce using rule 131 (expr)


state 184

  160 expr: expr PLUS @88 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 231


state 185

  120 expr: expr MINUS @66 IDENTIFIER . @67

    $default  reduce using rule 119 (@67)

    @67  go to state 232


state 186

  133 expr: expr MINUS @75 TERM .

    $default  reduce using rule 133 (expr)


state 187

  162 expr: expr MINUS @89 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 233


state 188

  117 expr: expr TIMES @64 IDENTIFIER . @65

    $default  reduce using rule 116 (@65)

    @65  go to state 234


state 189

  135 expr: expr TIMES @76 TERM .

    $default  reduce using rule 135 (expr)


state 190

  164 expr: expr TIMES @90 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 235


state 191

  114 expr: expr DIVIDE @62 IDENTIFIER . @63

    $default  reduce using rule 113 (@63)

    @63  go to state 236


state 192

  137 expr: expr DIVIDE @77 TERM .

    $default  reduce using rule 137 (expr)


state 193

  166 expr: expr DIVIDE @91 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 237


state 194

  151 expr: expr POWER @84 TERM .

    $default  reduce using rule 151 (expr)


state 195

  180 expr: expr POWER @98 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 238


state 196

  153 expr: expr AND @85 TERM .

    $default  reduce using rule 153 (expr)


state 197

  182 expr: expr AND @99 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 239


state 198

  155 expr: expr OR @86 TERM .

    $default  reduce using rule 155 (expr)


state 199

  184 expr: expr OR @100 LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 240


state 200

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN . dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13
    CHAR    shift, and go to state 14
    VOID    shift, and go to state 15

    $default  reduce using rule 71 (dec_param_list)

    dec_param_list  go to state 241
    DATATYPE        go to state 242


state 201

   77 var_decl: DATATYPE IDENTIFIER @38 SEMICOLON .

    $default  reduce using rule 77 (var_decl)


state 202

   80 var_decl: DATATYPE IDENTIFIER @39 ASSIGN . @40 TERM SEMICOLON

    $default  reduce using rule 79 (@40)

    @40  go to state 243


state 203

   83 var_decl: DATATYPE IDENTIFIER @41 ASSIGN . @42 expr SEMICOLON

    $default  reduce using rule 82 (@42)

    @42  go to state 244


state 204

   65 func_call: IDENTIFIER @35 LPAREN call_param_list RPAREN .

    $default  reduce using rule 65 (func_call)


state 205

   72 call_param_list: expr COMMA . call_param_list

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    IDENTIFIER         shift, and go to state 53
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93
    LPAREN             shift, and go to state 17
    UNARY              shift, and go to state 19
    NOT                shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call        go to state 30
    call_param_list  go to state 245
    expr             go to state 142
    TERM             go to state 143


state 206

   74 call_param_list: TERM COMMA . call_param_list

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    IDENTIFIER         shift, and go to state 53
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93
    LPAREN             shift, and go to state 17
    UNARY              shift, and go to state 19
    NOT                shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call        go to state 30
    call_param_list  go to state 246
    expr             go to state 142
    TERM             go to state 143


state 207

   90 assignment_stmt: IDENTIFIER @46 ASSIGN @47 TERM . SEMICOLON

    SEMICOLON  shift, and go to state 247


state 208

   93 assignment_stmt: IDENTIFIER @48 ASSIGN @49 expr . SEMICOLON
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ         shift, and go to state 62
    NEQ        shift, and go to state 63
    LT         shift, and go to state 64
    GT         shift, and go to state 65
    LEQ        shift, and go to state 66
    GEQ        shift, and go to state 67
    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    TIMES      shift, and go to state 70
    DIVIDE     shift, and go to state 71
    SEMICOLON  shift, and go to state 248
    POWER      shift, and go to state 73
    AND        shift, and go to state 74
    OR         shift, and go to state 75


state 209

   28 if_stmt: IF @6 LPAREN expr RPAREN . LBRACE @7 stmt_list RBRACE @8

    LBRACE  shift, and go to state 249


state 210

   35 if_stmt: IF @9 LPAREN expr RPAREN . LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    LBRACE  shift, and go to state 250


state 211

   38 while_stmt: WHILE @15 LPAREN expr RPAREN . LBRACE @16 stmt_list RBRACE

    LBRACE  shift, and go to state 251


state 212

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list . RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    RBRACE  shift, and go to state 252


state 213

   49 for_stmt: FOR @21 LPAREN var_decl expr . SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ         shift, and go to state 62
    NEQ        shift, and go to state 63
    LT         shift, and go to state 64
    GT         shift, and go to state 65
    LEQ        shift, and go to state 66
    GEQ        shift, and go to state 67
    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    TIMES      shift, and go to state 70
    DIVIDE     shift, and go to state 71
    SEMICOLON  shift, and go to state 253
    POWER      shift, and go to state 73
    AND        shift, and go to state 74
    OR         shift, and go to state 75


state 214

   77 var_decl: DATATYPE IDENTIFIER . @38 SEMICOLON
   80         | DATATYPE IDENTIFIER . @39 ASSIGN @40 TERM SEMICOLON
   83         | DATATYPE IDENTIFIER . @41 ASSIGN @42 expr SEMICOLON

    ASSIGN    reduce using rule 78 (@39)
    ASSIGN    [reduce using rule 81 (@41)]
    $default  reduce using rule 76 (@38)

    @38  go to state 138
    @39  go to state 139
    @41  go to state 140


state 215

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN . LBRACE @27 case_list RBRACE @28

    LBRACE  shift, and go to state 254


state 216

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 . ASSIGN @45 TERM SEMICOLON

    ASSIGN  shift, and go to state 255


state 217

    4 stmt_list: LBRACE @1 stmt_list RBRACE @2 . stmt_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $end      reduce using rule 5 (stmt_list)
    CASE      reduce using rule 5 (stmt_list)
    DEFAULT   reduce using rule 5 (stmt_list)
    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 256
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 218

   96 expr: expr EQ @50 IDENTIFIER @51 .

    $default  reduce using rule 96 (expr)


state 219

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  168     | expr EQ @92 LPAREN expr . RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 257
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 220

   99 expr: expr NEQ @52 IDENTIFIER @53 .

    $default  reduce using rule 99 (expr)


state 221

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  170     | expr NEQ @93 LPAREN expr . RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 258
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 222

  102 expr: expr LT @54 IDENTIFIER @55 .

    $default  reduce using rule 102 (expr)


state 223

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  172     | expr LT @94 LPAREN expr . RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 259
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 224

  105 expr: expr GT @56 IDENTIFIER @57 .

    $default  reduce using rule 105 (expr)


state 225

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  174     | expr GT @95 LPAREN expr . RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 260
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 226

  108 expr: expr LEQ @58 IDENTIFIER @59 .

    $default  reduce using rule 108 (expr)


state 227

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  176     | expr LEQ @96 LPAREN expr . RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 261
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 228

  111 expr: expr GEQ @60 IDENTIFIER @61 .

    $default  reduce using rule 111 (expr)


state 229

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  178     | expr GEQ @97 LPAREN expr . RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 262
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 230

  123 expr: expr PLUS @68 IDENTIFIER @69 .

    $default  reduce using rule 123 (expr)


state 231

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  160     | expr PLUS @88 LPAREN expr . RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 263
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 232

  120 expr: expr MINUS @66 IDENTIFIER @67 .

    $default  reduce using rule 120 (expr)


state 233

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  162     | expr MINUS @89 LPAREN expr . RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 264
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 234

  117 expr: expr TIMES @64 IDENTIFIER @65 .

    $default  reduce using rule 117 (expr)


state 235

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  164     | expr TIMES @90 LPAREN expr . RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 265
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 236

  114 expr: expr DIVIDE @62 IDENTIFIER @63 .

    $default  reduce using rule 114 (expr)


state 237

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  166     | expr DIVIDE @91 LPAREN expr . RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 266
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 238

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  180     | expr POWER @98 LPAREN expr . RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 267
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 239

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  182     | expr AND @99 LPAREN expr . RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 268
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 240

   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN
  184     | expr OR @100 LPAREN expr . RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 269
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 241

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list . RPAREN LBRACE @33 stmt_list RBRACE @34

    RPAREN  shift, and go to state 270


state 242

   68 dec_param_list: DATATYPE . IDENTIFIER @36 COMMA dec_param_list
   70               | DATATYPE . IDENTIFIER @37

    IDENTIFIER  shift, and go to state 271


state 243

   80 var_decl: DATATYPE IDENTIFIER @39 ASSIGN @40 . TERM SEMICOLON

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 272


state 244

   83 var_decl: DATATYPE IDENTIFIER @41 ASSIGN @42 . expr SEMICOLON

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 273


state 245

   72 call_param_list: expr COMMA call_param_list .

    $default  reduce using rule 72 (call_param_list)


state 246

   74 call_param_list: TERM COMMA call_param_list .

    $default  reduce using rule 74 (call_param_list)


state 247

   90 assignment_stmt: IDENTIFIER @46 ASSIGN @47 TERM SEMICOLON .

    $default  reduce using rule 90 (assignment_stmt)


state 248

   93 assignment_stmt: IDENTIFIER @48 ASSIGN @49 expr SEMICOLON .

    $default  reduce using rule 93 (assignment_stmt)


state 249

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE . @7 stmt_list RBRACE @8

    $default  reduce using rule 26 (@7)

    @7  go to state 274


state 250

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE . @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    $default  reduce using rule 30 (@10)

    @10  go to state 275


state 251

   38 while_stmt: WHILE @15 LPAREN expr RPAREN LBRACE . @16 stmt_list RBRACE

    $default  reduce using rule 37 (@16)

    @16  go to state 276


state 252

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE . @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON

    $default  reduce using rule 41 (@19)

    @19  go to state 277


state 253

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON . IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    IDENTIFIER  shift, and go to state 278


state 254

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE . @27 case_list RBRACE @28

    $default  reduce using rule 51 (@27)

    @27  go to state 279


state 255

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 ASSIGN . @45 TERM SEMICOLON

    $default  reduce using rule 86 (@45)

    @45  go to state 280


state 256

    4 stmt_list: LBRACE @1 stmt_list RBRACE @2 stmt_list .

    $default  reduce using rule 4 (stmt_list)


state 257

  168 expr: expr EQ @92 LPAREN expr RPAREN .

    $default  reduce using rule 168 (expr)


state 258

  170 expr: expr NEQ @93 LPAREN expr RPAREN .

    $default  reduce using rule 170 (expr)


state 259

  172 expr: expr LT @94 LPAREN expr RPAREN .

    $default  reduce using rule 172 (expr)


state 260

  174 expr: expr GT @95 LPAREN expr RPAREN .

    $default  reduce using rule 174 (expr)


state 261

  176 expr: expr LEQ @96 LPAREN expr RPAREN .

    $default  reduce using rule 176 (expr)


state 262

  178 expr: expr GEQ @97 LPAREN expr RPAREN .

    $default  reduce using rule 178 (expr)


state 263

  160 expr: expr PLUS @88 LPAREN expr RPAREN .

    $default  reduce using rule 160 (expr)


state 264

  162 expr: expr MINUS @89 LPAREN expr RPAREN .

    $default  reduce using rule 162 (expr)


state 265

  164 expr: expr TIMES @90 LPAREN expr RPAREN .

    $default  reduce using rule 164 (expr)


state 266

  166 expr: expr DIVIDE @91 LPAREN expr RPAREN .

    $default  reduce using rule 166 (expr)


state 267

  180 expr: expr POWER @98 LPAREN expr RPAREN .

    $default  reduce using rule 180 (expr)


state 268

  182 expr: expr AND @99 LPAREN expr RPAREN .

    $default  reduce using rule 182 (expr)


state 269

  184 expr: expr OR @100 LPAREN expr RPAREN .

    $default  reduce using rule 184 (expr)


state 270

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN . LBRACE @33 stmt_list RBRACE @34

    LBRACE  shift, and go to state 281


state 271

   68 dec_param_list: DATATYPE IDENTIFIER . @36 COMMA dec_param_list
   70               | DATATYPE IDENTIFIER . @37

    RPAREN    reduce using rule 69 (@37)
    $default  reduce using rule 67 (@36)

    @36  go to state 282
    @37  go to state 283


state 272

   80 var_decl: DATATYPE IDENTIFIER @39 ASSIGN @40 TERM . SEMICOLON

    SEMICOLON  shift, and go to state 284


state 273

   83 var_decl: DATATYPE IDENTIFIER @41 ASSIGN @42 expr . SEMICOLON
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ         shift, and go to state 62
    NEQ        shift, and go to state 63
    LT         shift, and go to state 64
    GT         shift, and go to state 65
    LEQ        shift, and go to state 66
    GEQ        shift, and go to state 67
    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    TIMES      shift, and go to state 70
    DIVIDE     shift, and go to state 71
    SEMICOLON  shift, and go to state 285
    POWER      shift, and go to state 73
    AND        shift, and go to state 74
    OR         shift, and go to state 75


state 274

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE @7 . stmt_list RBRACE @8

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 286
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 275

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 . stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 287
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 276

   38 while_stmt: WHILE @15 LPAREN expr RPAREN LBRACE @16 . stmt_list RBRACE

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 288
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 277

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 . UNTIL @20 LPAREN expr RPAREN SEMICOLON

    UNTIL  shift, and go to state 289


state 278

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER . @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    $default  reduce using rule 45 (@22)

    @22  go to state 290


state 279

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE @27 . case_list RBRACE @28

    CASE     shift, and go to state 291
    DEFAULT  shift, and go to state 292

    case_list  go to state 293


state 280

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 ASSIGN @45 . TERM SEMICOLON

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 294


state 281

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE . @33 stmt_list RBRACE @34

    $default  reduce using rule 61 (@33)

    @33  go to state 295


state 282

   68 dec_param_list: DATATYPE IDENTIFIER @36 . COMMA dec_param_list

    COMMA  shift, and go to state 296


state 283

   70 dec_param_list: DATATYPE IDENTIFIER @37 .

    $default  reduce using rule 70 (dec_param_list)


state 284

   80 var_decl: DATATYPE IDENTIFIER @39 ASSIGN @40 TERM SEMICOLON .

    $default  reduce using rule 80 (var_decl)


state 285

   83 var_decl: DATATYPE IDENTIFIER @41 ASSIGN @42 expr SEMICOLON .

    $default  reduce using rule 83 (var_decl)


state 286

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE @7 stmt_list . RBRACE @8

    RBRACE  shift, and go to state 297


state 287

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list . RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    RBRACE  shift, and go to state 298


state 288

   38 while_stmt: WHILE @15 LPAREN expr RPAREN LBRACE @16 stmt_list . RBRACE

    RBRACE  shift, and go to state 299


state 289

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL . @20 LPAREN expr RPAREN SEMICOLON

    $default  reduce using rule 42 (@20)

    @20  go to state 300


state 290

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 . ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    ASSIGN  shift, and go to state 301


state 291

   55 case_list: CASE . @29 expr COLON stmt_list case_list
   57          | CASE . @30 TERM COLON stmt_list case_list

    NUMBER             reduce using rule 56 (@30)
    FLOATING_NUMBER    reduce using rule 56 (@30)
    STRING_LITERAL     reduce using rule 56 (@30)
    CHARACTER_LITERAL  reduce using rule 56 (@30)
    TRUE               reduce using rule 56 (@30)
    FALSE              reduce using rule 56 (@30)
    $default           reduce using rule 54 (@29)

    @29  go to state 302
    @30  go to state 303


state 292

   59 case_list: DEFAULT . @31 COLON stmt_list

    $default  reduce using rule 58 (@31)

    @31  go to state 304


state 293

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE @27 case_list . RBRACE @28

    RBRACE  shift, and go to state 305


state 294

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 ASSIGN @45 TERM . SEMICOLON

    SEMICOLON  shift, and go to state 306


state 295

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 . stmt_list RBRACE @34

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 307
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 296

   68 dec_param_list: DATATYPE IDENTIFIER @36 COMMA . dec_param_list

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13
    CHAR    shift, and go to state 14
    VOID    shift, and go to state 15

    $default  reduce using rule 71 (dec_param_list)

    dec_param_list  go to state 308
    DATATYPE        go to state 242


state 297

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE @7 stmt_list RBRACE . @8

    $default  reduce using rule 27 (@8)

    @8  go to state 309


state 298

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE . @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14

    $default  reduce using rule 31 (@11)

    @11  go to state 310


state 299

   38 while_stmt: WHILE @15 LPAREN expr RPAREN LBRACE @16 stmt_list RBRACE .

    $default  reduce using rule 38 (while_stmt)


state 300

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 . LPAREN expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 311


state 301

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN . @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25

    $default  reduce using rule 46 (@23)

    @23  go to state 312


state 302

   55 case_list: CASE @29 . expr COLON stmt_list case_list

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 313


state 303

   57 case_list: CASE @30 . TERM COLON stmt_list case_list

    NUMBER             shift, and go to state 88
    FLOATING_NUMBER    shift, and go to state 89
    STRING_LITERAL     shift, and go to state 90
    CHARACTER_LITERAL  shift, and go to state 91
    TRUE               shift, and go to state 92
    FALSE              shift, and go to state 93

    TERM  go to state 314


state 304

   59 case_list: DEFAULT @31 . COLON stmt_list

    COLON  shift, and go to state 315


state 305

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE @27 case_list RBRACE . @28

    $default  reduce using rule 52 (@28)

    @28  go to state 316


state 306

   87 const_decl: CONST @43 DATATYPE IDENTIFIER @44 ASSIGN @45 TERM SEMICOLON .

    $default  reduce using rule 87 (const_decl)


state 307

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list . RBRACE @34

    RBRACE  shift, and go to state 317


state 308

   68 dec_param_list: DATATYPE IDENTIFIER @36 COMMA dec_param_list .

    $default  reduce using rule 68 (dec_param_list)


state 309

   28 if_stmt: IF @6 LPAREN expr RPAREN LBRACE @7 stmt_list RBRACE @8 .

    $default  reduce using rule 28 (if_stmt)


state 310

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 . ELSE @12 LBRACE @13 stmt_list RBRACE @14

    ELSE  shift, and go to state 318


state 311

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN . expr RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 319


state 312

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 . expr RPAREN LBRACE @24 stmt_list RBRACE @25

    IDENTIFIER  shift, and go to state 53
    LPAREN      shift, and go to state 17
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    $default  reduce using rule 66 (func_call)

    func_call  go to state 30
    expr       go to state 320


state 313

   55 case_list: CASE @29 expr . COLON stmt_list case_list
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    COLON   shift, and go to state 321
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 314

   57 case_list: CASE @30 TERM . COLON stmt_list case_list

    COLON  shift, and go to state 322


state 315

   59 case_list: DEFAULT @31 COLON . stmt_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 323
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 316

   53 switch_stmt: SWITCH @26 LPAREN expr RPAREN LBRACE @27 case_list RBRACE @28 .

    $default  reduce using rule 53 (switch_stmt)


state 317

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE . @34

    $default  reduce using rule 62 (@34)

    @34  go to state 324


state 318

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE . @12 LBRACE @13 stmt_list RBRACE @14

    $default  reduce using rule 32 (@12)

    @12  go to state 325


state 319

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr . RPAREN SEMICOLON
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 326
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 320

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr . RPAREN LBRACE @24 stmt_list RBRACE @25
   96 expr: expr . EQ @50 IDENTIFIER @51
   99     | expr . NEQ @52 IDENTIFIER @53
  102     | expr . LT @54 IDENTIFIER @55
  105     | expr . GT @56 IDENTIFIER @57
  108     | expr . LEQ @58 IDENTIFIER @59
  111     | expr . GEQ @60 IDENTIFIER @61
  114     | expr . DIVIDE @62 IDENTIFIER @63
  117     | expr . TIMES @64 IDENTIFIER @65
  120     | expr . MINUS @66 IDENTIFIER @67
  123     | expr . PLUS @68 IDENTIFIER @69
  131     | expr . PLUS @74 TERM
  133     | expr . MINUS @75 TERM
  135     | expr . TIMES @76 TERM
  137     | expr . DIVIDE @77 TERM
  139     | expr . EQ @78 TERM
  141     | expr . NEQ @79 TERM
  143     | expr . LT @80 TERM
  145     | expr . GT @81 TERM
  147     | expr . LEQ @82 TERM
  149     | expr . GEQ @83 TERM
  151     | expr . POWER @84 TERM
  153     | expr . AND @85 TERM
  155     | expr . OR @86 TERM
  160     | expr . PLUS @88 LPAREN expr RPAREN
  162     | expr . MINUS @89 LPAREN expr RPAREN
  164     | expr . TIMES @90 LPAREN expr RPAREN
  166     | expr . DIVIDE @91 LPAREN expr RPAREN
  168     | expr . EQ @92 LPAREN expr RPAREN
  170     | expr . NEQ @93 LPAREN expr RPAREN
  172     | expr . LT @94 LPAREN expr RPAREN
  174     | expr . GT @95 LPAREN expr RPAREN
  176     | expr . LEQ @96 LPAREN expr RPAREN
  178     | expr . GEQ @97 LPAREN expr RPAREN
  180     | expr . POWER @98 LPAREN expr RPAREN
  182     | expr . AND @99 LPAREN expr RPAREN
  184     | expr . OR @100 LPAREN expr RPAREN

    EQ      shift, and go to state 62
    NEQ     shift, and go to state 63
    LT      shift, and go to state 64
    GT      shift, and go to state 65
    LEQ     shift, and go to state 66
    GEQ     shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    RPAREN  shift, and go to state 327
    POWER   shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75


state 321

   55 case_list: CASE @29 expr COLON . stmt_list case_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    CASE      reduce using rule 5 (stmt_list)
    DEFAULT   reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 328
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 322

   57 case_list: CASE @30 TERM COLON . stmt_list case_list

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    CASE      reduce using rule 5 (stmt_list)
    DEFAULT   reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 329
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 323

   59 case_list: DEFAULT @31 COLON stmt_list .

    $default  reduce using rule 59 (case_list)


state 324

   63 func_decl: DATATYPE IDENTIFIER @32 LPAREN dec_param_list RPAREN LBRACE @33 stmt_list RBRACE @34 .

    $default  reduce using rule 63 (func_decl)


state 325

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 . LBRACE @13 stmt_list RBRACE @14

    LBRACE  shift, and go to state 330


state 326

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 331


state 327

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN . LBRACE @24 stmt_list RBRACE @25

    LBRACE  shift, and go to state 332


state 328

   55 case_list: CASE @29 expr COLON stmt_list . case_list

    CASE     shift, and go to state 291
    DEFAULT  shift, and go to state 292

    case_list  go to state 333


state 329

   57 case_list: CASE @30 TERM COLON stmt_list . case_list

    CASE     shift, and go to state 291
    DEFAULT  shift, and go to state 292

    case_list  go to state 334


state 330

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE . @13 stmt_list RBRACE @14

    $default  reduce using rule 33 (@13)

    @13  go to state 335


state 331

   43 repeat_stmt: REPEAT @17 LBRACE @18 stmt_list RBRACE @19 UNTIL @20 LPAREN expr RPAREN SEMICOLON .

    $default  reduce using rule 43 (repeat_stmt)


state 332

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE . @24 stmt_list RBRACE @25

    $default  reduce using rule 47 (@24)

    @24  go to state 336


state 333

   55 case_list: CASE @29 expr COLON stmt_list case_list .

    $default  reduce using rule 55 (case_list)


state 334

   57 case_list: CASE @30 TERM COLON stmt_list case_list .

    $default  reduce using rule 57 (case_list)


state 335

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 . stmt_list RBRACE @14

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 337
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 336

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 . stmt_list RBRACE @25

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    REPEAT      shift, and go to state 4
    FOR         shift, and go to state 5
    SWITCH      shift, and go to state 6
    BREAK       shift, and go to state 7
    CONTINUE    shift, and go to state 8
    CONST       shift, and go to state 9
    INT         shift, and go to state 10
    FLOAT       shift, and go to state 11
    BOOL        shift, and go to state 12
    STRING      shift, and go to state 13
    CHAR        shift, and go to state 14
    VOID        shift, and go to state 15
    RETURN      shift, and go to state 16
    LPAREN      shift, and go to state 17
    LBRACE      shift, and go to state 18
    UNARY       shift, and go to state 19
    NOT         shift, and go to state 20

    RBRACE    reduce using rule 5 (stmt_list)
    $default  reduce using rule 66 (func_call)

    stmt_list        go to state 338
    stmt             go to state 22
    return_stmt      go to state 23
    if_stmt          go to state 24
    while_stmt       go to state 25
    repeat_stmt      go to state 26
    for_stmt         go to state 27
    switch_stmt      go to state 28
    func_decl        go to state 29
    func_call        go to state 30
    var_decl         go to state 31
    const_decl       go to state 32
    assignment_stmt  go to state 33
    expr             go to state 34
    DATATYPE         go to state 35


state 337

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list . RBRACE @14

    RBRACE  shift, and go to state 339


state 338

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list . RBRACE @25

    RBRACE  shift, and go to state 340


state 339

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE . @14

    $default  reduce using rule 34 (@14)

    @14  go to state 341


state 340

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE . @25

    $default  reduce using rule 48 (@25)

    @25  go to state 342


state 341

   35 if_stmt: IF @9 LPAREN expr RPAREN LBRACE @10 stmt_list RBRACE @11 ELSE @12 LBRACE @13 stmt_list RBRACE @14 .

    $default  reduce using rule 35 (if_stmt)


state 342

   49 for_stmt: FOR @21 LPAREN var_decl expr SEMICOLON IDENTIFIER @22 ASSIGN @23 expr RPAREN LBRACE @24 stmt_list RBRACE @25 .

    $default  reduce using rule 49 (for_stmt)
